* Emacs client and daemon config

Enable lexical scoping for doom interop
#+begin_src emacs-lisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-
#+end_src

Set default shell to zsh
#+begin_src emacs-lisp
(defvar my-term-shell "/usr/bin/zsh")
(defadvice ansi-term (before force-bash)
  (interactive (list my-term-shell)))
(ad-activate 'ansi-term)
#+end_src

Double kill-ring size. Useful especially when using multiple cursor editing.
#+begin_src emacs-lisp
(setq kill-ring-max 120)
#+end_src

* Look and Feel
** Doom touch-ups
# Useful doom macros:
# - `load!' for loading external *.el files relative to this one
# - `use-package' for configuring packages
# - `after!' for running code after a package has loaded
# - `add-load-path!' for adding directories to the `load-path', relative to
#   this file. Emacs searches the `load-path' when you load packages with
#   `require' or `use-package'.
# - `map!' for binding new keys
*** Theme and fonts
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "monospace" :size 14))

(setq doom-theme 'doom-one)

;; 300px high works best
(setq fancy-splash-image "~/Pictures/logo.png")

;; remove footer & 'loaded' information
(setq +doom-dashboard-functions
      '(doom-dashboard-widget-banner
        doom-dashboard-widget-shortmenu))
#+end_src

*** Lines and displays
#+begin_src emacs-lisp
;; nil, relative, or t
(setq display-line-numbers-type t)

(setq +doom-dashboard-name "Î»")

(setq frame-title-format
      `(:eval (if (buffer-modified-p) "*%b*" "%b") " - " projectile-project-name))
#+end_src


* Custom key bindings
Somewhat sane, hopefully-RSI-preventing split window resizing commands
#+begin_src emacs-lisp
(map! "C-{" #'shrink-window-horizontally
      "C-}" #'enlarge-window-horizontally)


(global-set-key [(control w)] 'kill-region)
#+end_src

Super+enter opens a terminal buffer
#+begin_src emacs-lisp
(global-set-key (kbd "<s-return>") 'ansi-term)
#+end_src

C-c y for company-yasnippet
#+begin_src emacs-lisp
(global-set-key (kbd "C-c y") 'company-yasnippet)
#+End_src

Tab related bindings
#+begin_src elisp
(global-set-key (kbd "C-x t w") 'kill-current-buffer)
(global-set-key (kbd "C-x t t") 'centaur-tabs--create-new-tab)
(global-set-key [(control tab)] 'centaur-tabs-forward)
(global-set-key [(control shift iso-lefttab)] 'centaur-tabs-backward)
(global-set-key (kbd "C-x t o") 'centaur-tabs--groups-menu)
#+end_src


* Org-mode
#+begin_src emacs-lisp
(setq org-directory "~/org/")
(map! :map org-mode-map "C-q" #'org-toggle-checkbox)
#+end_src

* Projectile
#+begin_src emacs-lisp
(setq projectile-project-search-path '("~/Development/" "~/org/"))
#+end_src

* Centaur tabs
#+begin_src emacs-lisp
(setq centaur-tabs-style "zigzag"
      centaur-tabs-height 32
      centaur-tabs-set-icons t
      centaur-tabs-set-bar 'under
      centaur-tabs-set-modified-marker t
      centaur-tabs-show-count t)

(centaur-tabs-group-by-projectile-project)


#+end_src


* Language-related configurations
** Agnostic
Hopefully having this on globally won't crash emacs all that often.
#+begin_src emacs-lisp
(use-package flycheck
  :init (global-flycheck-mode))
#+end_src
